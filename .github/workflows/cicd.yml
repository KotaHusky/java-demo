name: CI/CD Pipeline for Java Demo

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up caching for Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      # Build, Test, and Package with Maven
      - name: Build, Test, and Package with Maven
        run: mvn clean package
        env:
          CI: true

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build Docker Image
      - name: Build Docker Image
        run: docker build -t kotaderg/java-demo:latest .

      # Push Docker Image to Docker Hub
      - name: Push Docker Image to Docker Hub
        run: docker push kotaderg/java-demo:latest

      # Configure kubectl for AWS
      - name: Configure kubectl for AWS
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_AWS }}" | base64 --decode > $HOME/.kube/config

      # Deploy to AWS EKS with Helm
      - name: Deploy to AWS with Helm
        run: |
          helm upgrade --install java-demo-release ./java-demo-chart -f java-demo-chart/values-aws.yaml

      # Configure kubectl for GCP (Placeholder)
      - name: Configure kubectl for GCP
        if: github.event_name == 'push' && env.KUBECONFIG_GCP
        run: echo "${{ secrets.KUBECONFIG_GCP }}" | base64 --decode > $HOME/.kube/config

      # Deploy to GCP with Helm (Placeholder)
      - name: Deploy to GCP with Helm
        if: github.event_name == 'push' && env.KUBECONFIG_GCP
        run: |
          helm upgrade --install java-demo-release ./java-demo-chart -f java-demo-chart/values-gcp.yaml

      # Configure kubectl for Azure (Placeholder)
      - name: Configure kubectl for Azure
        if: github.event_name == 'push' && env.KUBECONFIG_AZURE
        run: echo "${{ secrets.KUBECONFIG_AZURE }}" | base64 --decode > $HOME/.kube/config

      # Deploy to Azure with Helm (Placeholder)
      - name: Deploy to Azure with Helm
        if: github.event_name == 'push' && env.KUBECONFIG_AZURE
        run: |
          helm upgrade --install java-demo-release ./java-demo-chart -f java-demo-chart/values-azure.yaml
